/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app.ts":
/*!********************!*\
  !*** ./src/app.ts ***!
  \********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.securitiesArray = void 0;\r\nconst renderPage_1 = __webpack_require__(/*! ./assets/renderPage */ \"./src/assets/renderPage.ts\");\r\nexports.securitiesArray = JSON.parse(localStorage.getItem('securitiesArray') || '[]');\r\nconsole.log(exports.securitiesArray);\r\n(0, renderPage_1.displaySecurityPage)();\r\n\n\n//# sourceURL=webpack://rs-clone/./src/app.ts?");

/***/ }),

/***/ "./src/assets/addPage.ts":
/*!*******************************!*\
  !*** ./src/assets/addPage.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.addSecurityToPortfolio = exports.createStockBlock = exports.createInputContainer = void 0;\r\nconst functions_1 = __webpack_require__(/*! ./functions */ \"./src/assets/functions.ts\");\r\nconst app_1 = __webpack_require__(/*! ../app */ \"./src/app.ts\");\r\nfunction createStockInfoBlock(name, ticker, last) {\r\n    const typeBlock = (0, functions_1.createElement)('div', `Акция`, 'type-information');\r\n    const hrElement = (0, functions_1.createElement)('hr', null, 'hr-line');\r\n    const row = (0, functions_1.createElement)('div', null, 'row-name-ticker');\r\n    const tickerBlock = (0, functions_1.createElement)('div', `${ticker || ''}`, 'ticker-information');\r\n    const nameBlock = (0, functions_1.createElement)('div', `${name || ''}`, 'name-information');\r\n    const priceBlock = (0, functions_1.createElement)('div', null, 'price-information');\r\n    const priceText = (0, functions_1.createElement)('div', 'Стоимость на Московской бирже', 'price-text');\r\n    const priceValue = (0, functions_1.createElement)('div', `${last || ''}`, 'price-value');\r\n    const hrElement2 = (0, functions_1.createElement)('hr', null, 'hr-line');\r\n    row.appendChild(tickerBlock);\r\n    row.appendChild(nameBlock);\r\n    priceBlock.appendChild(priceText);\r\n    priceBlock.appendChild(priceValue);\r\n    const stockInfoBlock = (0, functions_1.createElement)('div', null, 'stock-information');\r\n    stockInfoBlock.appendChild(typeBlock);\r\n    stockInfoBlock.appendChild(hrElement);\r\n    stockInfoBlock.appendChild(row);\r\n    stockInfoBlock.appendChild(priceBlock);\r\n    stockInfoBlock.appendChild(hrElement2);\r\n    return stockInfoBlock;\r\n}\r\nfunction createInputContainer() {\r\n    const inputContainer = (0, functions_1.createElement)('div', null, 'input-container');\r\n    const purchasePriceInput = (0, functions_1.createElement)('input', null, 'purchase-price-input');\r\n    purchasePriceInput.type = 'number';\r\n    purchasePriceInput.placeholder = 'Цена покупки';\r\n    const quantityInput = (0, functions_1.createElement)('input', null, 'quantity-input');\r\n    quantityInput.type = 'number';\r\n    quantityInput.placeholder = 'Количество';\r\n    const dateInput = (0, functions_1.createElement)('input', null, 'date-input');\r\n    dateInput.type = 'date';\r\n    dateInput.value = new Date().toISOString().split('T')[0];\r\n    inputContainer.appendChild(purchasePriceInput);\r\n    inputContainer.appendChild(quantityInput);\r\n    inputContainer.appendChild(dateInput);\r\n    return inputContainer;\r\n}\r\nexports.createInputContainer = createInputContainer;\r\nfunction createStockBlock(name, ticker, last) {\r\n    const securityPage = document.querySelector('.security-page');\r\n    const backgroundDimming = (0, functions_1.createElement)('div', null, 'background-dimming');\r\n    const stockInfoBlock = createStockInfoBlock(name, ticker, last);\r\n    const inputContainer = createInputContainer();\r\n    const closeButton = (0, functions_1.createElement)('div', null, 'close-button');\r\n    const addToPortfolioButton = (0, functions_1.createElement)('button', 'Покупка', 'add-to-portfolio-button');\r\n    addToPortfolioButton.id = 'add-stock-button';\r\n    addToPortfolioButton.addEventListener('click', () => {\r\n        const purchasePriceInput = document.querySelector('.purchase-price-input');\r\n        const quantityInput = document.querySelector('.quantity-input');\r\n        const dateInput = document.querySelector('.date-input');\r\n        const newSecurity = {\r\n            type: 'stock',\r\n            ticker: ticker || '',\r\n            name: name || '',\r\n            purchasePrice: Number(purchasePriceInput.value),\r\n            amount: Number(quantityInput.value),\r\n            purchaseDate: new Date(dateInput.value),\r\n        };\r\n        alert(`Вы приобрели ценные бумаги на сумму ${Number(purchasePriceInput.value) * Number(quantityInput.value)} ₽`);\r\n        securityPage === null || securityPage === void 0 ? void 0 : securityPage.removeChild(stockInfoBlock);\r\n        securityPage === null || securityPage === void 0 ? void 0 : securityPage.removeChild(backgroundDimming);\r\n        addSecurityToPortfolio(newSecurity);\r\n    });\r\n    closeButton.addEventListener('click', () => {\r\n        securityPage === null || securityPage === void 0 ? void 0 : securityPage.removeChild(stockInfoBlock);\r\n        securityPage === null || securityPage === void 0 ? void 0 : securityPage.removeChild(backgroundDimming);\r\n    });\r\n    stockInfoBlock.appendChild(inputContainer);\r\n    stockInfoBlock.appendChild(addToPortfolioButton);\r\n    securityPage === null || securityPage === void 0 ? void 0 : securityPage.appendChild(stockInfoBlock);\r\n    securityPage === null || securityPage === void 0 ? void 0 : securityPage.appendChild(backgroundDimming);\r\n    stockInfoBlock.classList.add('show'); /* add the 'show' class */\r\n}\r\nexports.createStockBlock = createStockBlock;\r\nfunction addSecurityToPortfolio(security) {\r\n    app_1.securitiesArray.push(security);\r\n    localStorage.setItem('securitiesArray', JSON.stringify(app_1.securitiesArray));\r\n}\r\nexports.addSecurityToPortfolio = addSecurityToPortfolio;\r\n\n\n//# sourceURL=webpack://rs-clone/./src/assets/addPage.ts?");

/***/ }),

/***/ "./src/assets/animationPage.ts":
/*!*************************************!*\
  !*** ./src/assets/animationPage.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.displayListSecurities = void 0;\r\nconst functions_1 = __webpack_require__(/*! ./functions */ \"./src/assets/functions.ts\");\r\nfunction displayListSecurities(obj, container) {\r\n    if (obj.lastPrice) {\r\n        const price = (obj.lastPrice * obj.amount).toFixed(2);\r\n        const profit = ((obj.lastPrice - obj.purchasePrice) * obj.amount).toFixed(2);\r\n        const procent = (100 * (+profit / +price)).toFixed(2);\r\n        const block = (0, functions_1.createElement)('div', null, `security-block`);\r\n        container.appendChild(block);\r\n        const secInfo = (0, functions_1.createElement)('div', null, `security-info`);\r\n        block.appendChild(secInfo);\r\n        const secTickerName = (0, functions_1.createElement)('div', `${obj.name}`, `security-ticker`);\r\n        secInfo.appendChild(secTickerName);\r\n        const secAmount = (0, functions_1.createElement)('div', `${obj.amount} шт.`, `security-amount`);\r\n        secInfo.appendChild(secAmount);\r\n        const secFin = (0, functions_1.createElement)('div', null, `security-fin`);\r\n        block.appendChild(secFin);\r\n        const secPrice = (0, functions_1.createElement)('div', `${price} ₽ `, `security-price`);\r\n        secFin.appendChild(secPrice);\r\n        const secProfit = (0, functions_1.createElement)('div', null, `security-profit`);\r\n        secFin.appendChild(secProfit);\r\n        const secResult = (0, functions_1.createElement)('div', `${profit} ₽ `, `security-result`);\r\n        secProfit.appendChild(secResult);\r\n        const secDot = (0, functions_1.createElement)('span', `/`, 'dot-block');\r\n        secProfit.appendChild(secDot);\r\n        const secProcent = (0, functions_1.createElement)('div', ` ${procent} %`, `security-procent`);\r\n        secProfit.appendChild(secProcent);\r\n        if (+profit < 0) {\r\n            secResult.classList.add('red-color');\r\n            secProcent.classList.add('red-color');\r\n        }\r\n    }\r\n}\r\nexports.displayListSecurities = displayListSecurities;\r\n\n\n//# sourceURL=webpack://rs-clone/./src/assets/animationPage.ts?");

/***/ }),

/***/ "./src/assets/api.ts":
/*!***************************!*\
  !*** ./src/assets/api.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getBondsTickers = exports.getStocksTickers = exports.moexGetTickerPrice = exports.moexTickerLast = void 0;\r\nfunction moexTickerLast(ticker) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const json = yield fetch('https://iss.moex.com/iss/engines/stock/markets/shares/securities/' + ticker + '.json').then(function (res) { return res.json(); });\r\n        return json.marketdata.data.filter(function (d) { return ['TQBR', 'TQTF'].indexOf(d[1]) !== -1; })[0][12];\r\n    });\r\n}\r\nexports.moexTickerLast = moexTickerLast;\r\nfunction moexGetTickerPrice(ticker) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const response = yield fetch('https://iss.moex.com/iss/engines/stock/markets/shares/securities/' + ticker + '.json');\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to retrieve data for ticker \"${ticker}\"`);\r\n        }\r\n        const data = yield response.json();\r\n        const targetArray = data.securities.data.find((subArray) => subArray[1] === 'TQBR');\r\n        if (!targetArray) {\r\n            throw new Error(`No data found for ticker \"${ticker}\" on TQBR`);\r\n        }\r\n        const price = targetArray[3];\r\n        return price;\r\n    });\r\n}\r\nexports.moexGetTickerPrice = moexGetTickerPrice;\r\nfunction getStocksTickers() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            const response = yield fetch('https://iss.moex.com/iss/engines/stock/markets/shares/securities/.json');\r\n            const json = yield response.json();\r\n            const data = json.securities.data;\r\n            console.dir(data);\r\n            const tqbr = data.filter((elem) => elem[1] === 'TQBR');\r\n            return tqbr;\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            return [];\r\n        }\r\n    });\r\n}\r\nexports.getStocksTickers = getStocksTickers;\r\nfunction getBondsTickers() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            const response = yield fetch('https://iss.moex.com/iss/engines/stock/markets/bonds/securities/.json');\r\n            const json = yield response.json();\r\n            const data = json.securities.data;\r\n            console.dir(data);\r\n            const tqob = data.filter((elem) => elem[1] === 'TQOB');\r\n            return tqob;\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            return [];\r\n        }\r\n    });\r\n}\r\nexports.getBondsTickers = getBondsTickers;\r\n\n\n//# sourceURL=webpack://rs-clone/./src/assets/api.ts?");

/***/ }),

/***/ "./src/assets/data.ts":
/*!****************************!*\
  !*** ./src/assets/data.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.updateSecuritiesArray = void 0;\r\nconst api_1 = __webpack_require__(/*! ./api */ \"./src/assets/api.ts\");\r\nfunction updateSecuritiesArray(securitiesArray) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const updatedArray = yield Promise.all(securitiesArray.map((security) => __awaiter(this, void 0, void 0, function* () {\r\n            const price = yield (0, api_1.moexGetTickerPrice)(security.ticker);\r\n            return Object.assign(Object.assign({}, security), { lastPrice: price });\r\n        })));\r\n        return updatedArray;\r\n    });\r\n}\r\nexports.updateSecuritiesArray = updateSecuritiesArray;\r\n\n\n//# sourceURL=webpack://rs-clone/./src/assets/data.ts?");

/***/ }),

/***/ "./src/assets/functions.ts":
/*!*********************************!*\
  !*** ./src/assets/functions.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.calculateTotalProfit = exports.calculateTotalSum = exports.createElement = void 0;\r\nfunction createElement(tag, text, className) {\r\n    const element = document.createElement(tag);\r\n    if (text) {\r\n        element.innerText = text;\r\n    }\r\n    if (className !== '') {\r\n        element.classList.add(className);\r\n    }\r\n    return element;\r\n}\r\nexports.createElement = createElement;\r\nfunction calculateTotalSum(array) {\r\n    let sum = 0;\r\n    array.forEach(el => {\r\n        if (el.lastPrice) {\r\n            sum += el.amount * el.lastPrice;\r\n        }\r\n    });\r\n    return sum;\r\n}\r\nexports.calculateTotalSum = calculateTotalSum;\r\nfunction calculateTotalProfit(array) {\r\n    let sum = 0;\r\n    array.forEach(el => {\r\n        if (el.lastPrice) {\r\n            sum += el.amount * (el.lastPrice - el.purchasePrice);\r\n        }\r\n    });\r\n    return sum;\r\n}\r\nexports.calculateTotalProfit = calculateTotalProfit;\r\n\n\n//# sourceURL=webpack://rs-clone/./src/assets/functions.ts?");

/***/ }),

/***/ "./src/assets/renderPage.ts":
/*!**********************************!*\
  !*** ./src/assets/renderPage.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.displaySecurityPage = exports.totalPortfolioValue = void 0;\r\nconst functions_1 = __webpack_require__(/*! ./functions */ \"./src/assets/functions.ts\");\r\nconst functions_2 = __webpack_require__(/*! ./functions */ \"./src/assets/functions.ts\");\r\nconst data_1 = __webpack_require__(/*! ./data */ \"./src/assets/data.ts\");\r\nconst app_1 = __webpack_require__(/*! ../app */ \"./src/app.ts\");\r\nconst animationPage_1 = __webpack_require__(/*! ./animationPage */ \"./src/assets/animationPage.ts\");\r\nconst searchPage_1 = __webpack_require__(/*! ./searchPage */ \"./src/assets/searchPage.ts\");\r\nfunction displaySecurityPage() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const securitiesPage = (0, functions_1.createElement)('div', null, 'security-page');\r\n        document.body.appendChild(securitiesPage);\r\n        const securitiesPageContainer = (0, functions_1.createElement)('div', null, 'security-page__container');\r\n        securitiesPage.appendChild(securitiesPageContainer);\r\n        const headerBlock = (0, functions_1.createElement)('div', null, 'header-block');\r\n        securitiesPageContainer.appendChild(headerBlock);\r\n        const mainBlock = (0, functions_1.createElement)('div', null, 'main-block');\r\n        securitiesPageContainer.appendChild(mainBlock);\r\n        yield renderHeaderBlock(headerBlock);\r\n        yield renderAddButton(headerBlock);\r\n        yield renderSecurityBlock('Акции', 'stock', mainBlock);\r\n        yield renderSecurityBlock('Облигации', 'bond', mainBlock);\r\n        yield renderSecurityBlock('БПИФ', 'etf', mainBlock);\r\n    });\r\n}\r\nexports.displaySecurityPage = displaySecurityPage;\r\nfunction renderHeaderBlock(container) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const lastPriceArray = yield (0, data_1.updateSecuritiesArray)(app_1.securitiesArray);\r\n        exports.totalPortfolioValue = (0, functions_2.calculateTotalSum)(lastPriceArray);\r\n        const totalResult = +(0, functions_2.calculateTotalProfit)(lastPriceArray).toFixed(2);\r\n        const headerPage = (0, functions_1.createElement)('div', null, 'header-information');\r\n        container.appendChild(headerPage);\r\n        const headerBlockName = (0, functions_1.createElement)('div', 'Ценные бумаги', 'header-information__name');\r\n        headerPage.appendChild(headerBlockName);\r\n        const headerBlockSum = (0, functions_1.createElement)('div', null, 'header-information__sum');\r\n        headerPage.appendChild(headerBlockSum);\r\n        const amountRubles = (0, functions_1.createElement)('span', `${Math.trunc(exports.totalPortfolioValue)}`, 'amount-rubles');\r\n        headerBlockSum.appendChild(amountRubles);\r\n        const amountKopecks = (0, functions_1.createElement)('span', `,${Math.floor((exports.totalPortfolioValue % 1) * Math.pow(10, 2))} ₽`, 'amount-kopecks');\r\n        headerBlockSum.appendChild(amountKopecks);\r\n        const headerBlockProfit = (0, functions_1.createElement)('div', null, 'header-information__profit');\r\n        headerPage.appendChild(headerBlockProfit);\r\n        const profitBlock = (0, functions_1.createElement)('div', null, 'profit-block');\r\n        headerBlockProfit.appendChild(profitBlock);\r\n        const profitRubles = (0, functions_1.createElement)('span', `${totalResult} ₽`, 'profit-rubles');\r\n        profitBlock.appendChild(profitRubles);\r\n        const profitLine = (0, functions_1.createElement)('span', ' / ', 'profit-line');\r\n        profitBlock.appendChild(profitLine);\r\n        const profitProcent = (0, functions_1.createElement)('span', `${(100 * (totalResult / exports.totalPortfolioValue)).toFixed(2)} %`, 'profit-procent');\r\n        profitBlock.appendChild(profitProcent);\r\n        if (totalResult < 0) {\r\n            profitRubles.classList.add('red-color');\r\n            profitProcent.classList.add('red-color');\r\n        }\r\n        const periodBlock = (0, functions_1.createElement)('div', null, 'period-block');\r\n        headerBlockProfit.appendChild(periodBlock);\r\n        const periodAll = (0, functions_1.createElement)('span', 'фин. результат за все время ', 'period-all');\r\n        periodBlock.appendChild(periodAll);\r\n        /*\r\n            const periodArrowsDown = createElement('i', null, 'period-arrows_down');\r\n            periodAll.appendChild(periodArrowsDown);\r\n\r\n        const periodMonth = createElement('span', 'за месяц ', 'period-month');\r\n        periodBlock.appendChild(periodMonth);\r\n        periodMonth.style.display = 'none';\r\n            const periodArrowsUp = createElement('i', null, 'period-arrows_up');\r\n            periodMonth.appendChild(periodArrowsUp);\r\n        */\r\n    });\r\n}\r\nfunction renderSecurityBlock(name, type, container) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const getTypeArray = app_1.securitiesArray.filter(el => el.type === type);\r\n        const lastPriceArray = yield (0, data_1.updateSecuritiesArray)(getTypeArray);\r\n        const totalSum = (0, functions_2.calculateTotalSum)(lastPriceArray);\r\n        const totalResult = +(0, functions_2.calculateTotalProfit)(lastPriceArray).toFixed(2);\r\n        const block = (0, functions_1.createElement)('div', null, `${type}-block`);\r\n        container.appendChild(block);\r\n        const info = (0, functions_1.createElement)('div', null, `${type}-info`);\r\n        block.appendChild(info);\r\n        const titleBlock = (0, functions_1.createElement)('div', null, `title-${type}`);\r\n        info.appendChild(titleBlock);\r\n        const nameTitle = (0, functions_1.createElement)('div', `${name}`, `name-${type}`);\r\n        titleBlock.appendChild(nameTitle);\r\n        const profitTitle = (0, functions_1.createElement)('div', null, `profit-${type}`);\r\n        titleBlock.appendChild(profitTitle);\r\n        const resultBlock = (0, functions_1.createElement)('span', `${totalSum.toFixed(2)} ₽`, `result-${type}`);\r\n        profitTitle.appendChild(resultBlock);\r\n        const dotBlock = (0, functions_1.createElement)('span', ' / ', 'dot-block');\r\n        profitTitle.appendChild(dotBlock);\r\n        let procent;\r\n        if (totalSum === 0) {\r\n            procent = 0;\r\n        }\r\n        else {\r\n            procent = (100 * (totalResult / totalSum)).toFixed(2);\r\n        }\r\n        const procentBlock = (0, functions_1.createElement)('span', `${procent} %`, `procent-${type}`);\r\n        if (totalResult < 0) {\r\n            procentBlock.classList.add('red-color');\r\n        }\r\n        profitTitle.appendChild(procentBlock);\r\n        const arrowBlock = (0, functions_1.createElement)('div', null, 'arrow-block');\r\n        info.appendChild(arrowBlock);\r\n        const list = (0, functions_1.createElement)('div', null, `${type}-list`);\r\n        block.appendChild(list);\r\n        lastPriceArray.forEach(el => (0, animationPage_1.displayListSecurities)(el, list));\r\n    });\r\n}\r\nfunction renderAddButton(container) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const addButtonContainer = (0, functions_1.createElement)('div', null, 'add-button__container');\r\n        container.appendChild(addButtonContainer);\r\n        const inputElement = (0, functions_1.createElement)('input', null, 'input-sec');\r\n        inputElement.defaultValue = 'Компания, тикер, ISIN';\r\n        inputElement.setAttribute('type', 'text');\r\n        const mainBlock = document.querySelector('.main-block');\r\n        inputElement.addEventListener('click', () => {\r\n            inputElement.defaultValue = '';\r\n            mainBlock.style.display = 'none';\r\n            (0, searchPage_1.renderSearchPage)();\r\n        });\r\n        addButtonContainer.appendChild(inputElement);\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://rs-clone/./src/assets/renderPage.ts?");

/***/ }),

/***/ "./src/assets/searchPage.ts":
/*!**********************************!*\
  !*** ./src/assets/searchPage.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.renderSearchPage = void 0;\r\nconst functions_1 = __webpack_require__(/*! ./functions */ \"./src/assets/functions.ts\");\r\nconst api_1 = __webpack_require__(/*! ./api */ \"./src/assets/api.ts\");\r\nconst addPage_1 = __webpack_require__(/*! ./addPage */ \"./src/assets/addPage.ts\");\r\nconst updatePage_1 = __webpack_require__(/*! ./updatePage */ \"./src/assets/updatePage.ts\");\r\nconst app_1 = __webpack_require__(/*! ../app */ \"./src/app.ts\");\r\nfunction renderSearchPage() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const pageContainer = document.querySelector('.security-page__container');\r\n        const searchBlock = (0, functions_1.createElement)('div', null, 'search-block');\r\n        if (pageContainer) {\r\n            const existingSearchBlock = pageContainer.querySelector('.search-block');\r\n            if (existingSearchBlock) {\r\n                while (existingSearchBlock.firstChild) {\r\n                    existingSearchBlock.removeChild(existingSearchBlock.firstChild);\r\n                }\r\n                pageContainer.removeChild(existingSearchBlock);\r\n            }\r\n            pageContainer.appendChild(searchBlock);\r\n            const arrayStocksTickers = yield (0, api_1.getStocksTickers)();\r\n            const arrayBondsTickers = yield (0, api_1.getBondsTickers)();\r\n            const searchInput = document.querySelector('.input-sec');\r\n            if (searchInput) {\r\n                searchInput.addEventListener('input', () => {\r\n                    renderStoks(searchTickers(searchInput, arrayStocksTickers), 'АКЦИИ');\r\n                    renderStoks(searchTickers(searchInput, arrayBondsTickers), 'ОБЛИГАЦИИ');\r\n                });\r\n            }\r\n            handleStockClick();\r\n        }\r\n    });\r\n}\r\nexports.renderSearchPage = renderSearchPage;\r\nfunction searchTickers(inputElement, array) {\r\n    const searchTerm = inputElement.value.toLowerCase();\r\n    const filteredTickers = array.filter((elem) => {\r\n        return (elem[2].toLowerCase().includes(searchTerm) ||\r\n            elem[0].toLowerCase().includes(searchTerm) ||\r\n            elem[19].toLowerCase().includes(searchTerm));\r\n    });\r\n    return filteredTickers;\r\n}\r\nfunction renderStoks(filteredStoks, name) {\r\n    const parentElement = document.querySelector('.search-block');\r\n    if (parentElement) {\r\n        while (parentElement === null || parentElement === void 0 ? void 0 : parentElement.firstChild) {\r\n            parentElement.removeChild(parentElement.firstChild);\r\n        }\r\n        const headerStocks = (0, functions_1.createElement)('div', `${name}`, 'header-stocks');\r\n        parentElement.appendChild(headerStocks);\r\n        const stocksBlock = (0, functions_1.createElement)('div', null, 'stocks-block');\r\n        parentElement.appendChild(stocksBlock);\r\n        const stocksBlocContainer = (0, functions_1.createElement)('div', null, 'stocks-block__container');\r\n        stocksBlock.appendChild(stocksBlocContainer);\r\n        filteredStoks.forEach((stock) => {\r\n            const stockElement = (0, functions_1.createElement)('div', null, 'stock-element');\r\n            stockElement.id = stock[0].toString();\r\n            stocksBlocContainer.appendChild(stockElement);\r\n            const stockRow = (0, functions_1.createElement)('div', null, 'stock-row');\r\n            stockElement.appendChild(stockRow);\r\n            const stockInform = (0, functions_1.createElement)('div', null, 'stock-inform');\r\n            stockRow.appendChild(stockInform);\r\n            const stockName = (0, functions_1.createElement)('div', `${stock[2]}`, 'stock-name');\r\n            stockInform.appendChild(stockName);\r\n            const stockTicker = (0, functions_1.createElement)('div', `${stock[0]}`, 'stock-ticker');\r\n            stockInform.appendChild(stockTicker);\r\n            const stockQuotes = (0, functions_1.createElement)('div', null, 'stock-quotes');\r\n            stockRow.appendChild(stockQuotes);\r\n            const stockLastPrice = (0, functions_1.createElement)('div', `${stock[3]} ₽`, 'stock-last');\r\n            stockQuotes.appendChild(stockLastPrice);\r\n            const procent = (100 * (+stock[3] - +stock[15]) / (+stock[3])).toFixed(2);\r\n            if (+procent > 0) {\r\n                const stockPrevPrice = (0, functions_1.createElement)('div', `${procent} %`, 'stock-prev_green');\r\n                stockQuotes.appendChild(stockPrevPrice);\r\n            }\r\n            else {\r\n                const stockPrevPrice = (0, functions_1.createElement)('div', `${procent} %`, 'stock-prev_red');\r\n                stockQuotes.appendChild(stockPrevPrice);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction handleStockClick() {\r\n    const parentElement = document.querySelector('.search-block');\r\n    if (parentElement) {\r\n        parentElement.addEventListener('click', event => {\r\n            const stockElement = event.target.closest('.stock-element');\r\n            if (stockElement) {\r\n                const stockTicker = stockElement.id;\r\n                const stockName = stockElement.querySelector('.stock-name').textContent;\r\n                const stockLast = stockElement.querySelector('.stock-last').textContent;\r\n                const securityExists = app_1.securitiesArray.some(security => security.ticker === stockTicker);\r\n                if (securityExists) {\r\n                    const security = app_1.securitiesArray.find(security => security.ticker === stockTicker);\r\n                    if (security) {\r\n                        (0, updatePage_1.updateStockBlock)(security, stockLast);\r\n                    }\r\n                }\r\n                else {\r\n                    (0, addPage_1.createStockBlock)(stockName, stockTicker, stockLast);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://rs-clone/./src/assets/searchPage.ts?");

/***/ }),

/***/ "./src/assets/updatePage.ts":
/*!**********************************!*\
  !*** ./src/assets/updatePage.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.updateStockBlock = void 0;\r\nconst functions_1 = __webpack_require__(/*! ./functions */ \"./src/assets/functions.ts\");\r\nconst app_1 = __webpack_require__(/*! ../app */ \"./src/app.ts\");\r\nconst renderPage_1 = __webpack_require__(/*! ./renderPage */ \"./src/assets/renderPage.ts\");\r\nfunction updateStockBlock(security, lastPrice) {\r\n    const securityPage = document.querySelector('.security-page');\r\n    const stockInfoBlock = updateStockInfoBlock(security.name, security.ticker, lastPrice, security.amount);\r\n    const inputContainer = createUpdateContainer();\r\n    const backgroundDimming = (0, functions_1.createElement)('div', null, 'background-dimming');\r\n    const closeButton = (0, functions_1.createElement)('div', null, 'close-button');\r\n    const addToPortfolioButton = (0, functions_1.createElement)('button', 'Покупка', 'add-to-portfolio-button');\r\n    const removeToPortfolioButton = (0, functions_1.createElement)('button', 'Продажа', 'remove-to-portfolio-button');\r\n    stockInfoBlock.appendChild(inputContainer);\r\n    stockInfoBlock.appendChild(closeButton);\r\n    stockInfoBlock.appendChild(addToPortfolioButton);\r\n    stockInfoBlock.appendChild(removeToPortfolioButton);\r\n    securityPage === null || securityPage === void 0 ? void 0 : securityPage.appendChild(stockInfoBlock);\r\n    securityPage === null || securityPage === void 0 ? void 0 : securityPage.appendChild(backgroundDimming);\r\n    stockInfoBlock.classList.add('show'); /* add the 'show' class */\r\n    addToPortfolioButton.addEventListener('click', () => {\r\n        const purchasePriceInput = document.querySelector('.purchase-price-input');\r\n        const quantityInput = document.querySelector('.quantity-input');\r\n        updateSecurityToPortfolio(security.ticker, Number(purchasePriceInput.value), Number(quantityInput.value));\r\n        alert(`Вы приобрели ценные бумаги на сумму ${Number(purchasePriceInput.value) * Number(quantityInput.value)} ₽`);\r\n        securityPage === null || securityPage === void 0 ? void 0 : securityPage.removeChild(stockInfoBlock);\r\n        securityPage === null || securityPage === void 0 ? void 0 : securityPage.removeChild(backgroundDimming);\r\n    });\r\n    removeToPortfolioButton.addEventListener('click', () => {\r\n        const purchasePriceInput = document.querySelector('.purchase-price-input');\r\n        const quantityInput = document.querySelector('.quantity-input');\r\n        removeSecurityFromPortfolio(security.ticker, Number(purchasePriceInput.value), Number(quantityInput.value));\r\n        alert(`Вы продали ценные бумаги на сумму ${Number(purchasePriceInput.value) * Number(quantityInput.value)} ₽`);\r\n        securityPage === null || securityPage === void 0 ? void 0 : securityPage.removeChild(stockInfoBlock);\r\n        securityPage === null || securityPage === void 0 ? void 0 : securityPage.removeChild(backgroundDimming);\r\n    });\r\n    closeButton.addEventListener('click', () => {\r\n        securityPage === null || securityPage === void 0 ? void 0 : securityPage.removeChild(stockInfoBlock);\r\n        securityPage === null || securityPage === void 0 ? void 0 : securityPage.removeChild(backgroundDimming);\r\n    });\r\n}\r\nexports.updateStockBlock = updateStockBlock;\r\nfunction updateStockInfoBlock(name, ticker, lastPrice, amount) {\r\n    const typeBlock = (0, functions_1.createElement)('div', `Акция`, 'type-information');\r\n    const hrElement = (0, functions_1.createElement)('hr', null, 'hr-line');\r\n    const row = (0, functions_1.createElement)('div', null, 'row-name-ticker');\r\n    const tickerBlock = (0, functions_1.createElement)('div', `${ticker || ''}`, 'ticker-information');\r\n    const nameBlock = (0, functions_1.createElement)('div', `${name || ''}`, 'name-information');\r\n    const priceBlock = (0, functions_1.createElement)('div', null, 'price-information');\r\n    const priceText = (0, functions_1.createElement)('div', 'Стоимость ценных бумаг', 'price-text');\r\n    const purchasePrice = calculateTotalPurchasePrice(app_1.securitiesArray, ticker, lastPrice);\r\n    const percentage = (100 * (purchasePrice / renderPage_1.totalPortfolioValue)).toFixed(2);\r\n    const priceValue = (0, functions_1.createElement)('div', `${purchasePrice || ''} ₽`, 'price-value');\r\n    const portfolioPercentage = (0, functions_1.createElement)('div', `${percentage} % от портфеля`, 'portfolio-percentage');\r\n    const financialResultsText = (0, functions_1.createElement)('div', `Фин. результат за все время`, 'financial-result-text');\r\n    const finResult = calculateFinancialResult(app_1.securitiesArray, ticker, lastPrice);\r\n    const financialResults = (0, functions_1.createElement)('div', `${finResult} ₽`, 'financial-result');\r\n    const amountText = (0, functions_1.createElement)('div', `Количество ценных бумаг`, 'financial-result-text');\r\n    const amountSecurity = (0, functions_1.createElement)('div', `${amount} шт.`, 'financial-result');\r\n    if (finResult > 0) {\r\n        financialResults.classList.add('green');\r\n    }\r\n    else if (finResult < 0) {\r\n        financialResults.classList.add('red');\r\n    }\r\n    const hrElement2 = (0, functions_1.createElement)('hr', null, 'hr-line');\r\n    row.appendChild(tickerBlock);\r\n    row.appendChild(nameBlock);\r\n    priceBlock.appendChild(priceText);\r\n    priceBlock.appendChild(priceValue);\r\n    priceBlock.appendChild(portfolioPercentage);\r\n    priceBlock.appendChild(financialResultsText);\r\n    priceBlock.appendChild(financialResults);\r\n    priceBlock.appendChild(amountText);\r\n    priceBlock.appendChild(amountSecurity);\r\n    const stockInfoBlock = (0, functions_1.createElement)('div', null, 'stock-information');\r\n    stockInfoBlock.appendChild(typeBlock);\r\n    stockInfoBlock.appendChild(hrElement);\r\n    stockInfoBlock.appendChild(row);\r\n    stockInfoBlock.appendChild(priceBlock);\r\n    stockInfoBlock.appendChild(hrElement2);\r\n    return stockInfoBlock;\r\n}\r\nfunction calculateTotalPurchasePrice(securities, ticker, lastPrice) {\r\n    return securities.reduce((total, security) => {\r\n        if (security.ticker === ticker) {\r\n            const numLastPrice = lastPrice ? parseFloat(lastPrice.slice(0, -2)) : 0;\r\n            return total + (numLastPrice * security.amount);\r\n        }\r\n        else {\r\n            return total;\r\n        }\r\n    }, 0);\r\n}\r\nfunction calculateFinancialResult(securities, ticker, lastPrice) {\r\n    const matchingSecurities = securities.filter(security => security.ticker === ticker);\r\n    const numLastPrice = parseFloat(lastPrice !== null && lastPrice !== void 0 ? lastPrice : '0');\r\n    const result = matchingSecurities.reduce((result, security) => {\r\n        return result + (numLastPrice - security.purchasePrice) * security.amount;\r\n    }, 0);\r\n    return parseFloat(result.toFixed(2));\r\n}\r\nfunction createUpdateContainer() {\r\n    const inputContainer = (0, functions_1.createElement)('div', null, 'input-container');\r\n    const purchasePriceInput = (0, functions_1.createElement)('input', null, 'purchase-price-input');\r\n    purchasePriceInput.type = 'number';\r\n    purchasePriceInput.placeholder = 'Цена';\r\n    const quantityInput = (0, functions_1.createElement)('input', null, 'quantity-input');\r\n    quantityInput.type = 'number';\r\n    quantityInput.placeholder = 'Количество';\r\n    const dateInput = (0, functions_1.createElement)('input', null, 'date-input');\r\n    dateInput.type = 'date';\r\n    dateInput.value = new Date().toISOString().split('T')[0];\r\n    inputContainer.appendChild(purchasePriceInput);\r\n    inputContainer.appendChild(quantityInput);\r\n    inputContainer.appendChild(dateInput);\r\n    return inputContainer;\r\n}\r\nfunction updateSecurityToPortfolio(ticker, purchasePrice, quantity) {\r\n    const matchingSecurity = app_1.securitiesArray.find(security => security.ticker === ticker);\r\n    if (matchingSecurity) {\r\n        const newAmount = matchingSecurity.amount + quantity;\r\n        const newPurchasePrice = (matchingSecurity.purchasePrice * matchingSecurity.amount + purchasePrice * quantity) / newAmount;\r\n        matchingSecurity.amount = newAmount;\r\n        matchingSecurity.purchasePrice = newPurchasePrice;\r\n        localStorage.setItem('securitiesArray', JSON.stringify(app_1.securitiesArray));\r\n    }\r\n}\r\nfunction removeSecurityFromPortfolio(ticker, purchasePrice, quantity) {\r\n    const matchingSecurity = app_1.securitiesArray.find(security => security.ticker === ticker);\r\n    if (matchingSecurity) {\r\n        const newAmount = matchingSecurity.amount - quantity;\r\n        if (newAmount === 0) {\r\n            app_1.securitiesArray.splice(app_1.securitiesArray.indexOf(matchingSecurity), 1);\r\n        }\r\n        else if (newAmount > 0) {\r\n            matchingSecurity.amount = newAmount;\r\n        }\r\n        localStorage.setItem('securitiesArray', JSON.stringify(app_1.securitiesArray));\r\n        return purchasePrice * quantity;\r\n    }\r\n    return 0;\r\n}\r\n\n\n//# sourceURL=webpack://rs-clone/./src/assets/updatePage.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app.ts");
/******/ 	
/******/ })()
;